import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SortType } from '../../types/sort.type';
import { SelectionType } from '../../types/selection.type';
import { TableColumn } from '../../types/table-column.type';
import { SortDirection } from '../../types/sort-direction.type';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableHeaderCellComponent {
    private cd;
    sortType: SortType;
    sortAscendingIcon: string;
    sortDescendingIcon: string;
    sortUnsetIcon: string;
    isTarget: boolean;
    targetMarkerTemplate: any;
    targetMarkerContext: any;
    _allRowsSelected: boolean;
    set allRowsSelected(value: boolean);
    get allRowsSelected(): boolean;
    selectionType: SelectionType;
    set column(column: TableColumn);
    get column(): TableColumn;
    headerHeight: number;
    set sorts(val: any[]);
    get sorts(): any[];
    sort: EventEmitter<any>;
    select: EventEmitter<any>;
    columnContextmenu: EventEmitter<{
        event: MouseEvent;
        column: any;
    }>;
    get columnCssClasses(): any;
    get name(): string;
    get minWidth(): number;
    get maxWidth(): number;
    get width(): number;
    get isCheckboxable(): boolean;
    sortFn: any;
    sortClass: string;
    sortDir: SortDirection;
    selectFn: any;
    cellContext: any;
    private _column;
    private _sorts;
    constructor(cd: ChangeDetectorRef);
    onContextmenu($event: MouseEvent): void;
    ngOnInit(): void;
    calcSortDir(sorts: any[]): any;
    onSort(): void;
    calcSortClass(sortDir: SortDirection): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableHeaderCellComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableHeaderCellComponent, "datatable-header-cell", never, {
    "allRowsSelected": "allRowsSelected";
    "column": "column";
    "sorts": "sorts";
    "sortType": "sortType";
    "sortAscendingIcon": "sortAscendingIcon";
    "sortDescendingIcon": "sortDescendingIcon";
    "sortUnsetIcon": "sortUnsetIcon";
    "isTarget": "isTarget";
    "targetMarkerTemplate": "targetMarkerTemplate";
    "targetMarkerContext": "targetMarkerContext";
    "selectionType": "selectionType";
    "headerHeight": "headerHeight";
}, {
    "sort": "sort";
    "select": "select";
    "columnContextmenu": "columnContextmenu";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWNlbGwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImhlYWRlci1jZWxsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTb3J0VHlwZSB9IGZyb20gJy4uLy4uL3R5cGVzL3NvcnQudHlwZSc7XG5pbXBvcnQgeyBTZWxlY3Rpb25UeXBlIH0gZnJvbSAnLi4vLi4vdHlwZXMvc2VsZWN0aW9uLnR5cGUnO1xuaW1wb3J0IHsgVGFibGVDb2x1bW4gfSBmcm9tICcuLi8uLi90eXBlcy90YWJsZS1jb2x1bW4udHlwZSc7XG5pbXBvcnQgeyBTb3J0RGlyZWN0aW9uIH0gZnJvbSAnLi4vLi4vdHlwZXMvc29ydC1kaXJlY3Rpb24udHlwZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVGFibGVIZWFkZXJDZWxsQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIGNkO1xuICAgIHNvcnRUeXBlOiBTb3J0VHlwZTtcbiAgICBzb3J0QXNjZW5kaW5nSWNvbjogc3RyaW5nO1xuICAgIHNvcnREZXNjZW5kaW5nSWNvbjogc3RyaW5nO1xuICAgIHNvcnRVbnNldEljb246IHN0cmluZztcbiAgICBpc1RhcmdldDogYm9vbGVhbjtcbiAgICB0YXJnZXRNYXJrZXJUZW1wbGF0ZTogYW55O1xuICAgIHRhcmdldE1hcmtlckNvbnRleHQ6IGFueTtcbiAgICBfYWxsUm93c1NlbGVjdGVkOiBib29sZWFuO1xuICAgIHNldCBhbGxSb3dzU2VsZWN0ZWQodmFsdWU6IGJvb2xlYW4pO1xuICAgIGdldCBhbGxSb3dzU2VsZWN0ZWQoKTogYm9vbGVhbjtcbiAgICBzZWxlY3Rpb25UeXBlOiBTZWxlY3Rpb25UeXBlO1xuICAgIHNldCBjb2x1bW4oY29sdW1uOiBUYWJsZUNvbHVtbik7XG4gICAgZ2V0IGNvbHVtbigpOiBUYWJsZUNvbHVtbjtcbiAgICBoZWFkZXJIZWlnaHQ6IG51bWJlcjtcbiAgICBzZXQgc29ydHModmFsOiBhbnlbXSk7XG4gICAgZ2V0IHNvcnRzKCk6IGFueVtdO1xuICAgIHNvcnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29sdW1uQ29udGV4dG1lbnU6IEV2ZW50RW1pdHRlcjx7XG4gICAgICAgIGV2ZW50OiBNb3VzZUV2ZW50O1xuICAgICAgICBjb2x1bW46IGFueTtcbiAgICB9PjtcbiAgICBnZXQgY29sdW1uQ3NzQ2xhc3NlcygpOiBhbnk7XG4gICAgZ2V0IG5hbWUoKTogc3RyaW5nO1xuICAgIGdldCBtaW5XaWR0aCgpOiBudW1iZXI7XG4gICAgZ2V0IG1heFdpZHRoKCk6IG51bWJlcjtcbiAgICBnZXQgd2lkdGgoKTogbnVtYmVyO1xuICAgIGdldCBpc0NoZWNrYm94YWJsZSgpOiBib29sZWFuO1xuICAgIHNvcnRGbjogYW55O1xuICAgIHNvcnRDbGFzczogc3RyaW5nO1xuICAgIHNvcnREaXI6IFNvcnREaXJlY3Rpb247XG4gICAgc2VsZWN0Rm46IGFueTtcbiAgICBjZWxsQ29udGV4dDogYW55O1xuICAgIHByaXZhdGUgX2NvbHVtbjtcbiAgICBwcml2YXRlIF9zb3J0cztcbiAgICBjb25zdHJ1Y3RvcihjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG9uQ29udGV4dG1lbnUoJGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIGNhbGNTb3J0RGlyKHNvcnRzOiBhbnlbXSk6IGFueTtcbiAgICBvblNvcnQoKTogdm9pZDtcbiAgICBjYWxjU29ydENsYXNzKHNvcnREaXI6IFNvcnREaXJlY3Rpb24pOiBzdHJpbmc7XG59XG4iXX0=