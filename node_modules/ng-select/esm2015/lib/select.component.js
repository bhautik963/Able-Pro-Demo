/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostListener, Input, Output, EventEmitter, ViewChild, ViewEncapsulation, forwardRef, ElementRef, ContentChild, TemplateRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { SelectDropdownComponent } from './select-dropdown.component';
import { OptionList } from './option-list';
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './select-dropdown.component';

const _c0 = ["optionTemplate"];
const _c1 = ["selection"];
const _c2 = ["dropdown"];
const _c3 = ["filterInput"];
function SelectComponent_label_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r17.label, "\n");
} }
function SelectComponent_div_3_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function SelectComponent_div_3_div_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r28 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r28.optionList.selection[0].label);
} }
const _c4 = function (a0, a1) { return { option: a0, onDeselectOptionClick: a1 }; };
function SelectComponent_div_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtemplate(1, SelectComponent_div_3_div_1_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵtemplate(2, SelectComponent_div_3_div_1_span_2_Template, 2, 1, "span", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r22.optionTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(3, _c4, ctx_r22.optionList.selection[0].wrappedOption, ctx_r22.onDeselectOptionClick));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r22.optionTemplate);
} }
function SelectComponent_div_3_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r23.placeholderView, " ");
} }
function SelectComponent_div_3_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵlistener("click", function SelectComponent_div_3_div_3_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.onClearSelectionClick($event); });
    ɵngcc0.ɵɵtext(1, " \u2715 ");
    ɵngcc0.ɵɵelementEnd();
} }
function SelectComponent_div_3_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵtext(1, " \u25B2 ");
    ɵngcc0.ɵɵelementEnd();
} }
function SelectComponent_div_3_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵtext(1, " \u25BC ");
    ɵngcc0.ɵɵelementEnd();
} }
function SelectComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵtemplate(1, SelectComponent_div_3_div_1_Template, 3, 6, "div", 7);
    ɵngcc0.ɵɵtemplate(2, SelectComponent_div_3_div_2_Template, 2, 1, "div", 8);
    ɵngcc0.ɵɵtemplate(3, SelectComponent_div_3_div_3_Template, 2, 0, "div", 9);
    ɵngcc0.ɵɵtemplate(4, SelectComponent_div_3_div_4_Template, 2, 0, "div", 10);
    ɵngcc0.ɵɵtemplate(5, SelectComponent_div_3_div_5_Template, 2, 0, "div", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r19 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r19.optionList.hasSelected);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r19.optionList.hasSelected);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r19.allowClear && ctx_r19.optionList.hasSelected);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r19.isOpen);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r19.isOpen);
} }
function SelectComponent_div_4_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r36 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 19);
    ɵngcc0.ɵɵelementStart(1, "span", 20);
    ɵngcc0.ɵɵlistener("click", function SelectComponent_div_4_div_1_Template_span_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r36); const option_r34 = ctx.$implicit; const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ctx_r35.onDeselectOptionClick(option_r34); });
    ɵngcc0.ɵɵtext(2, " \u2715 ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r34 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", option_r34.label, " ");
} }
function SelectComponent_div_4_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r32 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r32.placeholderView, " ");
} }
const _c5 = function (a0) { return { "width.px": a0 }; };
function SelectComponent_div_4_input_3_Template(rf, ctx) { if (rf & 1) {
    const _r39 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 21, 22);
    ɵngcc0.ɵɵlistener("input", function SelectComponent_div_4_input_3_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r39); const ctx_r38 = ɵngcc0.ɵɵnextContext(2); return ctx_r38.onFilterInput($event.target.value); })("keydown", function SelectComponent_div_4_input_3_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r39); const ctx_r40 = ɵngcc0.ɵɵnextContext(2); return ctx_r40.onMultipleFilterKeydown($event); })("focus", function SelectComponent_div_4_input_3_Template_input_focus_0_listener() { ɵngcc0.ɵɵrestoreView(_r39); const ctx_r41 = ɵngcc0.ɵɵnextContext(2); return ctx_r41.onMultipleFilterFocus(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r33 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("placeholder", ctx_r33.placeholderView)("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c5, ctx_r33.filterInputWidth));
} }
function SelectComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵtemplate(1, SelectComponent_div_4_div_1_Template, 4, 1, "div", 17);
    ɵngcc0.ɵɵtemplate(2, SelectComponent_div_4_div_2_Template, 2, 1, "div", 8);
    ɵngcc0.ɵɵtemplate(3, SelectComponent_div_4_input_3_Template, 2, 4, "input", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r20 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r20.optionList.selection);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r20.filterEnabled && !ctx_r20.optionList.hasSelected);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r20.filterEnabled);
} }
function SelectComponent_select_dropdown_5_Template(rf, ctx) { if (rf & 1) {
    const _r44 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "select-dropdown", 23, 24);
    ɵngcc0.ɵɵlistener("optionClicked", function SelectComponent_select_dropdown_5_Template_select_dropdown_optionClicked_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r43 = ɵngcc0.ɵɵnextContext(); return ctx_r43.onDropdownOptionClicked($event); })("optionsListClick", function SelectComponent_select_dropdown_5_Template_select_dropdown_optionsListClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r45 = ɵngcc0.ɵɵnextContext(); return ctx_r45.onOptionsListClick(); })("singleFilterClick", function SelectComponent_select_dropdown_5_Template_select_dropdown_singleFilterClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r46 = ɵngcc0.ɵɵnextContext(); return ctx_r46.onSingleFilterClick(); })("singleFilterFocus", function SelectComponent_select_dropdown_5_Template_select_dropdown_singleFilterFocus_0_listener() { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r47 = ɵngcc0.ɵɵnextContext(); return ctx_r47.onSingleFilterFocus(); })("singleFilterInput", function SelectComponent_select_dropdown_5_Template_select_dropdown_singleFilterInput_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r48 = ɵngcc0.ɵɵnextContext(); return ctx_r48.onFilterInput($event); })("singleFilterKeydown", function SelectComponent_select_dropdown_5_Template_select_dropdown_singleFilterKeydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r49 = ɵngcc0.ɵɵnextContext(); return ctx_r49.onSingleFilterKeydown($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r21 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("multiple", ctx_r21.multiple)("optionList", ctx_r21.optionList)("notFoundMsg", ctx_r21.notFoundMsg)("highlightColor", ctx_r21.highlightColor)("highlightTextColor", ctx_r21.highlightTextColor)("filterEnabled", ctx_r21.filterEnabled)("placeholder", ctx_r21.filterPlaceholder)("isBelow", ctx_r21.isBelow)("width", ctx_r21.width)("top", ctx_r21.top)("left", ctx_r21.left)("optionTemplate", ctx_r21.optionTemplate);
} }
const _c6 = function (a0, a1, a2, a3, a4) { return { "open": a0, "focus": a1, "below": a2, "above": a3, "disabled": a4 }; };
export const SELECT_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef((/**
     * @return {?}
     */
    () => SelectComponent)),
    multi: true
};
export class SelectComponent {
    /**
     * @param {?} hostElement
     */
    constructor(hostElement) {
        this.hostElement = hostElement;
        // Data input.
        this.options = [];
        // Functionality settings.
        this.allowClear = false;
        this.disabled = false;
        this.multiple = false;
        this.noFilter = 0;
        // Text settings.
        this.notFoundMsg = 'No results found';
        this.placeholder = '';
        this.filterPlaceholder = '';
        this.label = '';
        // Output events.
        this.opened = new EventEmitter();
        this.closed = new EventEmitter();
        this.selected = new EventEmitter();
        this.deselected = new EventEmitter();
        this.focus = new EventEmitter();
        this.blur = new EventEmitter();
        this.noOptionsFound = new EventEmitter();
        this.filterInputChanged = new EventEmitter();
        this._value = [];
        this.optionList = new OptionList([]);
        // View state variables.
        this.hasFocus = false;
        this.isOpen = false;
        this.isBelow = true;
        this.filterEnabled = true;
        this.filterInputWidth = 1;
        this.isDisabled = false;
        this.placeholderView = '';
        this.clearClicked = false;
        this.selectContainerClicked = false;
        this.optionListClicked = false;
        this.optionClicked = false;
        this.onChange = (/**
         * @param {?} _
         * @return {?}
         */
        (_) => { });
        this.onTouched = (/**
         * @return {?}
         */
        () => { });
        /**
         * Keys. *
         */
        this.KEYS = {
            BACKSPACE: 8,
            TAB: 9,
            ENTER: 13,
            ESC: 27,
            SPACE: 32,
            UP: 38,
            DOWN: 40
        };
    }
    /**
     * Event handlers. *
     * @return {?}
     */
    ngOnInit() {
        this.placeholderView = this.placeholder;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.handleInputChanges(changes);
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.updateState();
    }
    /**
     * @return {?}
     */
    onWindowBlur() {
        this._blur();
    }
    /**
     * @return {?}
     */
    onWindowClick() {
        if (!this.selectContainerClicked &&
            (!this.optionListClicked || (this.optionListClicked && this.optionClicked))) {
            this.closeDropdown(this.optionClicked);
            if (!this.optionClicked) {
                this._blur();
            }
        }
        this.clearClicked = false;
        this.selectContainerClicked = false;
        this.optionListClicked = false;
        this.optionClicked = false;
    }
    /**
     * @return {?}
     */
    onWindowResize() {
        this.updateWidth();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onSelectContainerClick(event) {
        this.selectContainerClicked = true;
        if (!this.clearClicked) {
            this.toggleDropdown();
        }
    }
    /**
     * @return {?}
     */
    onSelectContainerFocus() {
        this._focus();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onSelectContainerKeydown(event) {
        this.handleSelectContainerKeydown(event);
    }
    /**
     * @return {?}
     */
    onOptionsListClick() {
        this.optionListClicked = true;
    }
    /**
     * @param {?} option
     * @return {?}
     */
    onDropdownOptionClicked(option) {
        this.optionClicked = true;
        this.multiple ? this.toggleSelectOption(option) : this.selectOption(option);
    }
    /**
     * @return {?}
     */
    onSingleFilterClick() {
        this.selectContainerClicked = true;
    }
    /**
     * @return {?}
     */
    onSingleFilterFocus() {
        this._focus();
    }
    /**
     * @param {?} term
     * @return {?}
     */
    onFilterInput(term) {
        this.filterInputChanged.emit(term);
        this.filter(term);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onSingleFilterKeydown(event) {
        this.handleSingleFilterKeydown(event);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onMultipleFilterKeydown(event) {
        this.handleMultipleFilterKeydown(event);
    }
    /**
     * @return {?}
     */
    onMultipleFilterFocus() {
        this._focus();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onClearSelectionClick(event) {
        this.clearClicked = true;
        this.clearSelection();
        this.closeDropdown(true);
    }
    /**
     * @param {?} option
     * @return {?}
     */
    onDeselectOptionClick(option) {
        this.clearClicked = true;
        this.deselectOption(option);
    }
    /**
     * API. *
     * @return {?}
     */
    // TODO fix issues with global click/key handler that closes the dropdown.
    open() {
        this.openDropdown();
    }
    /**
     * @return {?}
     */
    close() {
        this.closeDropdown(false);
    }
    /**
     * @return {?}
     */
    clear() {
        this.clearSelection();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    select(value) {
        this.writeValue(value);
    }
    /**
     * ControlValueAccessor interface methods. *
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        this.value = value;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    /**
     * Input change handling. *
     * @private
     * @param {?} changes
     * @return {?}
     */
    handleInputChanges(changes) {
        /** @type {?} */
        let optionsChanged = changes.hasOwnProperty('options');
        /** @type {?} */
        let noFilterChanged = changes.hasOwnProperty('noFilter');
        /** @type {?} */
        let placeholderChanged = changes.hasOwnProperty('placeholder');
        if (optionsChanged) {
            this.updateOptionList(changes.options.currentValue);
            this.updateState();
        }
        if (optionsChanged || noFilterChanged) {
            this.updateFilterEnabled();
        }
        if (placeholderChanged) {
            this.updateState();
        }
    }
    /**
     * @private
     * @param {?} options
     * @return {?}
     */
    updateOptionList(options) {
        this.optionList = new OptionList(options);
        this.optionList.value = this._value;
    }
    /**
     * @private
     * @return {?}
     */
    updateFilterEnabled() {
        this.filterEnabled = this.optionList.options.length >= this.noFilter;
    }
    /**
     * Value. *
     * @return {?}
     */
    get value() {
        return this.multiple ? this._value : this._value[0];
    }
    /**
     * @param {?} v
     * @return {?}
     */
    set value(v) {
        if (typeof v === 'undefined' || v === null || v === '') {
            v = [];
        }
        else if (typeof v === 'string') {
            v = [v];
        }
        else if (!Array.isArray(v)) {
            throw new TypeError('Value must be a string or an array.');
        }
        this.optionList.value = v;
        this._value = v;
        this.updateState();
    }
    /**
     * @private
     * @return {?}
     */
    valueChanged() {
        this._value = this.optionList.value;
        this.updateState();
        this.onChange(this.value);
    }
    /**
     * @private
     * @return {?}
     */
    updateState() {
        this.placeholderView = this.optionList.hasSelected ? '' : this.placeholder;
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.updateFilterWidth();
        }));
    }
    /**
     * Select. *
     * @private
     * @param {?} option
     * @return {?}
     */
    selectOption(option) {
        if (!option.selected && !option.disabled) {
            this.optionList.select(option, this.multiple);
            this.valueChanged();
            this.selected.emit(option.wrappedOption);
        }
    }
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    deselectOption(option) {
        if (option.selected) {
            this.optionList.deselect(option);
            this.valueChanged();
            this.deselected.emit(option.wrappedOption);
            setTimeout((/**
             * @return {?}
             */
            () => {
                if (this.multiple) {
                    this.updatePosition();
                    this.optionList.highlight();
                    if (this.isOpen) {
                        this.dropdown.moveHighlightedIntoView();
                    }
                }
            }));
        }
    }
    /**
     * @private
     * @return {?}
     */
    clearSelection() {
        /** @type {?} */
        let selection = this.optionList.selection;
        if (selection.length > 0) {
            this.optionList.clearSelection();
            this.valueChanged();
            if (selection.length === 1) {
                this.deselected.emit(selection[0].wrappedOption);
            }
            else {
                this.deselected.emit(selection.map((/**
                 * @param {?} option
                 * @return {?}
                 */
                option => option.wrappedOption)));
            }
        }
    }
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    toggleSelectOption(option) {
        option.selected ? this.deselectOption(option) : this.selectOption(option);
    }
    /**
     * @private
     * @return {?}
     */
    selectHighlightedOption() {
        /** @type {?} */
        let option = this.optionList.highlightedOption;
        if (option !== null) {
            this.selectOption(option);
            this.closeDropdown(true);
        }
    }
    /**
     * @private
     * @return {?}
     */
    deselectLast() {
        /** @type {?} */
        let sel = this.optionList.selection;
        if (sel.length > 0) {
            /** @type {?} */
            let option = sel[sel.length - 1];
            this.deselectOption(option);
            this.setMultipleFilterInput(option.label + ' ');
        }
    }
    /**
     * Dropdown. *
     * @private
     * @return {?}
     */
    toggleDropdown() {
        if (!this.isDisabled) {
            this.isOpen ? this.closeDropdown(true) : this.openDropdown();
        }
    }
    /**
     * @private
     * @return {?}
     */
    openDropdown() {
        if (!this.isOpen) {
            this.isOpen = true;
            this.updateWidth();
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.updatePosition();
                if (this.multiple && this.filterEnabled) {
                    this.filterInput.nativeElement.focus();
                }
                this.opened.emit(null);
            }));
        }
    }
    /**
     * @private
     * @param {?} focus
     * @return {?}
     */
    closeDropdown(focus) {
        if (this.isOpen) {
            this.clearFilterInput();
            this.updateFilterWidth();
            this.isOpen = false;
            if (focus) {
                this._focusSelectContainer();
            }
            this.closed.emit(null);
        }
    }
    /**
     * Filter. *
     * @private
     * @param {?} term
     * @return {?}
     */
    filter(term) {
        if (this.multiple) {
            if (!this.isOpen) {
                this.openDropdown();
            }
            this.updateFilterWidth();
        }
        setTimeout((/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            let hasShown = this.optionList.filter(term);
            if (!hasShown) {
                this.noOptionsFound.emit(term);
            }
        }));
    }
    /**
     * @private
     * @return {?}
     */
    clearFilterInput() {
        if (this.multiple && this.filterEnabled) {
            this.filterInput.nativeElement.value = '';
        }
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    setMultipleFilterInput(value) {
        if (this.filterEnabled) {
            this.filterInput.nativeElement.value = value;
        }
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    handleSelectContainerKeydown(event) {
        /** @type {?} */
        let key = event.which;
        if (this.isOpen) {
            if (key === this.KEYS.ESC || (key === this.KEYS.UP && event.altKey)) {
                this.closeDropdown(true);
            }
            else if (key === this.KEYS.TAB) {
                this.closeDropdown(event.shiftKey);
                this._blur();
            }
            else if (key === this.KEYS.ENTER) {
                this.selectHighlightedOption();
            }
            else if (key === this.KEYS.UP) {
                this.optionList.highlightPreviousOption();
                this.dropdown.moveHighlightedIntoView();
                if (!this.filterEnabled) {
                    event.preventDefault();
                }
            }
            else if (key === this.KEYS.DOWN) {
                this.optionList.highlightNextOption();
                this.dropdown.moveHighlightedIntoView();
                if (!this.filterEnabled) {
                    event.preventDefault();
                }
            }
        }
        else {
            // DEPRICATED --> SPACE
            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||
                (key === this.KEYS.DOWN && event.altKey)) {
                /* FIREFOX HACK:
                 *
                 * The setTimeout is added to prevent the enter keydown event
                 * to be triggered for the filter input field, which causes
                 * the dropdown to be closed again.
                 */
                setTimeout((/**
                 * @return {?}
                 */
                () => { this.openDropdown(); }));
            }
            else if (key === this.KEYS.TAB) {
                this._blur();
            }
        }
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    handleMultipleFilterKeydown(event) {
        /** @type {?} */
        let key = event.which;
        if (key === this.KEYS.BACKSPACE) {
            if (this.optionList.hasSelected && this.filterEnabled &&
                this.filterInput.nativeElement.value === '') {
                this.deselectLast();
            }
        }
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    handleSingleFilterKeydown(event) {
        /** @type {?} */
        let key = event.which;
        if (key === this.KEYS.ESC || key === this.KEYS.TAB
            || key === this.KEYS.UP || key === this.KEYS.DOWN
            || key === this.KEYS.ENTER) {
            this.handleSelectContainerKeydown(event);
        }
    }
    /**
     * View. *
     * @return {?}
     */
    _blur() {
        if (this.hasFocus) {
            this.hasFocus = false;
            this.onTouched();
            this.blur.emit(null);
        }
    }
    /**
     * @return {?}
     */
    _focus() {
        if (!this.hasFocus) {
            this.hasFocus = true;
            this.focus.emit(null);
        }
    }
    /**
     * @return {?}
     */
    _focusSelectContainer() {
        this.selectionSpan.nativeElement.focus();
    }
    /**
     * @private
     * @return {?}
     */
    updateWidth() {
        this.width = this.selectionSpan.nativeElement.getBoundingClientRect().width;
    }
    /**
     * @private
     * @return {?}
     */
    updatePosition() {
        if (typeof this.dropdown !== 'undefined') {
            /** @type {?} */
            const hostRect = this.hostElement.nativeElement.getBoundingClientRect();
            /** @type {?} */
            const spanRect = this.selectionSpan.nativeElement.getBoundingClientRect();
            /** @type {?} */
            const dropRect = this.dropdown.hostElement.nativeElement.firstElementChild.getBoundingClientRect();
            /** @type {?} */
            const windowHeight = window.innerHeight;
            /** @type {?} */
            const top = spanRect.top - hostRect.top;
            /** @type {?} */
            const bottom = hostRect.bottom + dropRect.height;
            this.isBelow = bottom < windowHeight;
            this.left = spanRect.left - hostRect.left;
            this.top = this.isBelow ? top + spanRect.height : top - dropRect.height;
        }
    }
    /**
     * @private
     * @return {?}
     */
    updateFilterWidth() {
        if (typeof this.filterInput !== 'undefined') {
            /** @type {?} */
            let value = this.filterInput.nativeElement.value;
            this.filterInputWidth = value.length === 0 ?
                1 + this.placeholderView.length * 10 : 1 + value.length * 10;
        }
    }
}
SelectComponent.ɵfac = function SelectComponent_Factory(t) { return new (t || SelectComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SelectComponent, selectors: [["ng-select"]], contentQueries: function SelectComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionTemplate = _t.first);
    } }, viewQuery: function SelectComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c1, true);
        ɵngcc0.ɵɵviewQuery(_c2, true);
        ɵngcc0.ɵɵviewQuery(_c3, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectionSpan = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterInput = _t.first);
    } }, hostBindings: function SelectComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("blur", function SelectComponent_blur_HostBindingHandler() { return ctx.onWindowBlur(); }, false, ɵngcc0.ɵɵresolveWindow)("click", function SelectComponent_click_HostBindingHandler() { return ctx.onWindowClick(); }, false, ɵngcc0.ɵɵresolveWindow)("resize", function SelectComponent_resize_HostBindingHandler() { return ctx.onWindowResize(); }, false, ɵngcc0.ɵɵresolveWindow);
    } }, inputs: { options: "options", allowClear: "allowClear", disabled: "disabled", multiple: "multiple", noFilter: "noFilter", notFoundMsg: "notFoundMsg", placeholder: "placeholder", filterPlaceholder: "filterPlaceholder", label: "label", highlightColor: "highlightColor", highlightTextColor: "highlightTextColor" }, outputs: { opened: "opened", closed: "closed", selected: "selected", deselected: "deselected", focus: "focus", blur: "blur", noOptionsFound: "noOptionsFound", filterInputChanged: "filterInputChanged" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 6, vars: 12, consts: [[4, "ngIf"], [3, "ngClass", "click", "focus", "keydown"], ["selection", ""], ["class", "single", 4, "ngIf"], ["class", "multiple", 4, "ngIf"], [3, "multiple", "optionList", "notFoundMsg", "highlightColor", "highlightTextColor", "filterEnabled", "placeholder", "isBelow", "width", "top", "left", "optionTemplate", "optionClicked", "optionsListClick", "singleFilterClick", "singleFilterFocus", "singleFilterInput", "singleFilterKeydown", 4, "ngIf"], [1, "single"], ["class", "value", 4, "ngIf"], ["class", "placeholder", 4, "ngIf"], ["class", "clear", 3, "click", 4, "ngIf"], ["class", "toggle", 4, "ngIf"], [1, "value"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "placeholder"], [1, "clear", 3, "click"], [1, "toggle"], [1, "multiple"], ["class", "option", 4, "ngFor", "ngForOf"], ["autocomplete", "off", "tabindex", "-1", 3, "placeholder", "ngStyle", "input", "keydown", "focus", 4, "ngIf"], [1, "option"], [1, "deselect-option", 3, "click"], ["autocomplete", "off", "tabindex", "-1", 3, "placeholder", "ngStyle", "input", "keydown", "focus"], ["filterInput", ""], [3, "multiple", "optionList", "notFoundMsg", "highlightColor", "highlightTextColor", "filterEnabled", "placeholder", "isBelow", "width", "top", "left", "optionTemplate", "optionClicked", "optionsListClick", "singleFilterClick", "singleFilterFocus", "singleFilterInput", "singleFilterKeydown"], ["dropdown", ""]], template: function SelectComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SelectComponent_label_0_Template, 2, 1, "label", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1, 2);
        ɵngcc0.ɵɵlistener("click", function SelectComponent_Template_div_click_1_listener($event) { return ctx.onSelectContainerClick($event); })("focus", function SelectComponent_Template_div_focus_1_listener() { return ctx.onSelectContainerFocus(); })("keydown", function SelectComponent_Template_div_keydown_1_listener($event) { return ctx.onSelectContainerKeydown($event); });
        ɵngcc0.ɵɵtemplate(3, SelectComponent_div_3_Template, 6, 5, "div", 3);
        ɵngcc0.ɵɵtemplate(4, SelectComponent_div_4_Template, 4, 3, "div", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, SelectComponent_select_dropdown_5_Template, 2, 12, "select-dropdown", 5);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.label !== "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction5(6, _c6, ctx.isOpen, ctx.hasFocus, ctx.isBelow, !ctx.isBelow, ctx.disabled));
        ɵngcc0.ɵɵattribute("tabindex", ctx.disabled ? null : 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.multiple);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.multiple);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isOpen);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgForOf, ɵngcc1.NgStyle, ɵngcc2.SelectDropdownComponent], styles: ["ng-select{display:inline-block;margin:0;position:relative;vertical-align:middle;width:100%}ng-select *{box-sizing:border-box}ng-select>div{border:1px solid #ddd;box-sizing:border-box;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100%}ng-select>div.disabled{background-color:#eee;color:#aaa;cursor:default;pointer-events:none}ng-select>div>div.single{display:flex;height:30px;width:100%}ng-select>div>div.single>div.placeholder,ng-select>div>div.single>div.value{flex:1;line-height:30px;overflow:hidden;padding:0 10px;white-space:nowrap}ng-select>div>div.single>div.placeholder{color:#757575}ng-select>div>div.single>div.clear,ng-select>div>div.single>div.toggle{color:#aaa;line-height:30px;text-align:center;width:30px}ng-select>div>div.single>div.clear:hover,ng-select>div>div.single>div.toggle:hover{background-color:#ececec}ng-select>div>div.single>div.clear{font-size:18px}ng-select>div>div.single>div.toggle{font-size:14px}ng-select>div>div.multiple{display:flex;flex-flow:row wrap;height:100%;min-height:30px;padding:0 10px;width:100%}ng-select>div>div.multiple>div.option{background-color:#eee;border:1px solid #aaa;border-radius:4px;color:#333;cursor:default;display:inline-block;flex-shrink:0;font-size:14px;line-height:22px;margin:3px 5px 3px 0;padding:0 4px}ng-select>div>div.multiple>div.option span.deselect-option{color:#aaa;cursor:pointer;font-size:14px;height:20px;line-height:20px}ng-select>div>div.multiple>div.option span.deselect-option:hover{color:#555}ng-select>div>div.multiple input{background-color:transparent;border:none;cursor:pointer;height:30px;line-height:30px;padding:0}ng-select>div>div.multiple input:focus{outline:0}ng-select label{color:rgba(0,0,0,.38);display:block;font-size:13px;padding:4px 0}"], encapsulation: 2 });
/** @nocollapse */
SelectComponent.ctorParameters = () => [
    { type: ElementRef }
];
SelectComponent.propDecorators = {
    options: [{ type: Input }],
    allowClear: [{ type: Input }],
    disabled: [{ type: Input }],
    multiple: [{ type: Input }],
    noFilter: [{ type: Input }],
    highlightColor: [{ type: Input }],
    highlightTextColor: [{ type: Input }],
    notFoundMsg: [{ type: Input }],
    placeholder: [{ type: Input }],
    filterPlaceholder: [{ type: Input }],
    label: [{ type: Input }],
    opened: [{ type: Output }],
    closed: [{ type: Output }],
    selected: [{ type: Output }],
    deselected: [{ type: Output }],
    focus: [{ type: Output }],
    blur: [{ type: Output }],
    noOptionsFound: [{ type: Output }],
    filterInputChanged: [{ type: Output }],
    selectionSpan: [{ type: ViewChild, args: ['selection', { static: true },] }],
    dropdown: [{ type: ViewChild, args: ['dropdown', { static: false },] }],
    filterInput: [{ type: ViewChild, args: ['filterInput', { static: false },] }],
    optionTemplate: [{ type: ContentChild, args: ['optionTemplate', { static: false },] }],
    onWindowBlur: [{ type: HostListener, args: ['window:blur',] }],
    onWindowClick: [{ type: HostListener, args: ['window:click',] }],
    onWindowResize: [{ type: HostListener, args: ['window:resize',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectComponent, [{
        type: Component,
        args: [{
                selector: 'ng-select',
                template: "<label\n    *ngIf=\"label !== ''\">\n    {{label}}\n</label>\n<div\n    #selection\n    [attr.tabindex]=\"disabled ? null : 0\"\n    [ngClass]=\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'above': !isBelow, 'disabled': disabled}\"\n    (click)=\"onSelectContainerClick($event)\"\n    (focus)=\"onSelectContainerFocus()\"\n    (keydown)=\"onSelectContainerKeydown($event)\">\n\n    <div class=\"single\"\n        *ngIf=\"!multiple\">\n        <div class=\"value\"\n            *ngIf=\"optionList.hasSelected\">\n            <ng-container *ngTemplateOutlet=\"optionTemplate; context:{option: optionList.selection[0].wrappedOption, onDeselectOptionClick: onDeselectOptionClick}\"></ng-container>\n            <span *ngIf=\"!optionTemplate\">{{optionList.selection[0].label}}</span>\n        </div>\n        <div class=\"placeholder\"\n            *ngIf=\"!optionList.hasSelected\">\n            {{placeholderView}}\n        </div>\n        <div class=\"clear\"\n            *ngIf=\"allowClear && optionList.hasSelected\"\n            (click)=\"onClearSelectionClick($event)\">\n            &#x2715;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"isOpen\">\n            &#x25B2;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"!isOpen\">\n            &#x25BC;\n        </div>\n    </div>\n\n    <div class=\"multiple\"\n        *ngIf=\"multiple\">\n        <div class=\"option\"\n            *ngFor=\"let option of optionList.selection\">\n            <span class=\"deselect-option\"\n                (click)=onDeselectOptionClick(option)>\n                &#x2715;\n            </span>\n            {{option.label}}\n        </div>\n        <div class=\"placeholder\"\n            *ngIf=\"!filterEnabled && !optionList.hasSelected\">\n            {{placeholderView}}\n        </div>\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            autocomplete=\"off\"\n            tabindex=\"-1\"\n            [placeholder]=\"placeholderView\"\n            [ngStyle]=\"{'width.px': filterInputWidth}\"\n            (input)=\"onFilterInput($event.target.value)\"\n            (keydown)=\"onMultipleFilterKeydown($event)\"\n            (focus)=\"onMultipleFilterFocus()\"/>\n    </div>\n\n</div>\n<select-dropdown\n    *ngIf=\"isOpen\"\n    #dropdown\n    [multiple]=\"multiple\"\n    [optionList]=\"optionList\"\n    [notFoundMsg]=\"notFoundMsg\"\n    [highlightColor]=\"highlightColor\"\n    [highlightTextColor]=\"highlightTextColor\"\n    [filterEnabled]=\"filterEnabled\"\n    [placeholder]=\"filterPlaceholder\"\n    [isBelow]=\"isBelow\"\n    [width]=\"width\"\n    [top]=\"top\"\n    [left]=\"left\"\n    [optionTemplate]=\"optionTemplate\"\n    (optionClicked)=\"onDropdownOptionClicked($event)\"\n    (optionsListClick)=\"onOptionsListClick()\"\n    (singleFilterClick)=\"onSingleFilterClick()\"\n    (singleFilterFocus)=\"onSingleFilterFocus()\"\n    (singleFilterInput)=\"onFilterInput($event)\"\n    (singleFilterKeydown)=\"onSingleFilterKeydown($event)\">\n</select-dropdown>\n",
                providers: [SELECT_VALUE_ACCESSOR],
                encapsulation: ViewEncapsulation.None,
                styles: ["ng-select{display:inline-block;margin:0;position:relative;vertical-align:middle;width:100%}ng-select *{box-sizing:border-box}ng-select>div{border:1px solid #ddd;box-sizing:border-box;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100%}ng-select>div.disabled{background-color:#eee;color:#aaa;cursor:default;pointer-events:none}ng-select>div>div.single{display:flex;height:30px;width:100%}ng-select>div>div.single>div.placeholder,ng-select>div>div.single>div.value{flex:1;line-height:30px;overflow:hidden;padding:0 10px;white-space:nowrap}ng-select>div>div.single>div.placeholder{color:#757575}ng-select>div>div.single>div.clear,ng-select>div>div.single>div.toggle{color:#aaa;line-height:30px;text-align:center;width:30px}ng-select>div>div.single>div.clear:hover,ng-select>div>div.single>div.toggle:hover{background-color:#ececec}ng-select>div>div.single>div.clear{font-size:18px}ng-select>div>div.single>div.toggle{font-size:14px}ng-select>div>div.multiple{display:flex;flex-flow:row wrap;height:100%;min-height:30px;padding:0 10px;width:100%}ng-select>div>div.multiple>div.option{background-color:#eee;border:1px solid #aaa;border-radius:4px;color:#333;cursor:default;display:inline-block;flex-shrink:0;font-size:14px;line-height:22px;margin:3px 5px 3px 0;padding:0 4px}ng-select>div>div.multiple>div.option span.deselect-option{color:#aaa;cursor:pointer;font-size:14px;height:20px;line-height:20px}ng-select>div>div.multiple>div.option span.deselect-option:hover{color:#555}ng-select>div>div.multiple input{background-color:transparent;border:none;cursor:pointer;height:30px;line-height:30px;padding:0}ng-select>div>div.multiple input:focus{outline:0}ng-select label{color:rgba(0,0,0,.38);display:block;font-size:13px;padding:4px 0}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { options: [{
            type: Input
        }], allowClear: [{
            type: Input
        }], disabled: [{
            type: Input
        }], multiple: [{
            type: Input
        }], noFilter: [{
            type: Input
        }], notFoundMsg: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], filterPlaceholder: [{
            type: Input
        }], label: [{
            type: Input
        }], opened: [{
            type: Output
        }], closed: [{
            type: Output
        }], selected: [{
            type: Output
        }], deselected: [{
            type: Output
        }], focus: [{
            type: Output
        }], blur: [{
            type: Output
        }], noOptionsFound: [{
            type: Output
        }], filterInputChanged: [{
            type: Output
        }], onWindowBlur: [{
            type: HostListener,
            args: ['window:blur']
        }], onWindowClick: [{
            type: HostListener,
            args: ['window:click']
        }], onWindowResize: [{
            type: HostListener,
            args: ['window:resize']
        }], highlightColor: [{
            type: Input
        }], highlightTextColor: [{
            type: Input
        }], selectionSpan: [{
            type: ViewChild,
            args: ['selection', { static: true }]
        }], dropdown: [{
            type: ViewChild,
            args: ['dropdown', { static: false }]
        }], filterInput: [{
            type: ViewChild,
            args: ['filterInput', { static: false }]
        }], optionTemplate: [{
            type: ContentChild,
            args: ['optionTemplate', { static: false }]
        }] }); })();
if (false) {
    /** @type {?} */
    SelectComponent.prototype.options;
    /** @type {?} */
    SelectComponent.prototype.allowClear;
    /** @type {?} */
    SelectComponent.prototype.disabled;
    /** @type {?} */
    SelectComponent.prototype.multiple;
    /** @type {?} */
    SelectComponent.prototype.noFilter;
    /** @type {?} */
    SelectComponent.prototype.highlightColor;
    /** @type {?} */
    SelectComponent.prototype.highlightTextColor;
    /** @type {?} */
    SelectComponent.prototype.notFoundMsg;
    /** @type {?} */
    SelectComponent.prototype.placeholder;
    /** @type {?} */
    SelectComponent.prototype.filterPlaceholder;
    /** @type {?} */
    SelectComponent.prototype.label;
    /** @type {?} */
    SelectComponent.prototype.opened;
    /** @type {?} */
    SelectComponent.prototype.closed;
    /** @type {?} */
    SelectComponent.prototype.selected;
    /** @type {?} */
    SelectComponent.prototype.deselected;
    /** @type {?} */
    SelectComponent.prototype.focus;
    /** @type {?} */
    SelectComponent.prototype.blur;
    /** @type {?} */
    SelectComponent.prototype.noOptionsFound;
    /** @type {?} */
    SelectComponent.prototype.filterInputChanged;
    /** @type {?} */
    SelectComponent.prototype.selectionSpan;
    /** @type {?} */
    SelectComponent.prototype.dropdown;
    /** @type {?} */
    SelectComponent.prototype.filterInput;
    /** @type {?} */
    SelectComponent.prototype.optionTemplate;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype._value;
    /** @type {?} */
    SelectComponent.prototype.optionList;
    /** @type {?} */
    SelectComponent.prototype.hasFocus;
    /** @type {?} */
    SelectComponent.prototype.isOpen;
    /** @type {?} */
    SelectComponent.prototype.isBelow;
    /** @type {?} */
    SelectComponent.prototype.filterEnabled;
    /** @type {?} */
    SelectComponent.prototype.filterInputWidth;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype.isDisabled;
    /** @type {?} */
    SelectComponent.prototype.placeholderView;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype.clearClicked;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype.selectContainerClicked;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype.optionListClicked;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype.optionClicked;
    /** @type {?} */
    SelectComponent.prototype.width;
    /** @type {?} */
    SelectComponent.prototype.top;
    /** @type {?} */
    SelectComponent.prototype.left;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype.onChange;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype.onTouched;
    /**
     * Keys. *
     * @type {?}
     * @private
     */
    SelectComponent.prototype.KEYS;
    /**
     * @type {?}
     * @private
     */
    SelectComponent.prototype.hostElement;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,